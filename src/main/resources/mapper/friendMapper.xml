<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.togetheryoungback.mapper.FriendMapper">

    <insert id="insert">
        INSERT INTO TBL_FRIEND
        <choose>
            <when test="friendRequestUpdatedTime == null">
                VALUES(SEQ_FRIEND.NEXTVAL, #{id}, #{memberId}, #{friendId}, TO_DATE(#{friendRequestStatus},'YYYY-MM-DD HH:MISS'), NULL, #{friendDescription} )
            </when>
            <otherwise>
                VALUES(SEQ_FRIEND.NEXTVAL, #{id}, #{memberId}, #{friendId}, TO_DATE(#{friendRequestStatus},'YYYY-MM-DD HH:MISS'), TO_DATE(#{friendRequestUpdatedTime},'YYYY-MM-DD HH:MISS'), #{friendDescription} )
            </otherwise>
        </choose>
    </insert>

    <delete id="delete">
        DELETE FROM TBL_FRIEND
        WHERE FRIEND_ID = #{friendId}
    </delete>

    <select id="selectAllFriend" resultType="FriendDTO">
        SELECT TF.MEMBER_ID,TF.FRIEND_ID,TF.ID, M.MEMBER_NICKNAME, M.MEMBER_KAKAO_PROFILE_URL,
               M.MEMBER_IMG_NAME,M.MEMBER_IMG_PATH
        FROM TBL_MEMBER TM
                 JOIN TBL_FRIEND TF
                      ON TM.ID = TF.MEMBER_ID
                 JOIN TBL_MEMBER M
                      ON TF.FRIEND_ID = M.ID
        WHERE TF.MEMBER_ID = #{id} AND TF.FRIEND_REQUEST_STATUS = 'ACCEPTED'
    </select>

    <select id="friendSentMessage" resultType="MessageVO">
        SELECT MEMBER_SENT_ID, MEMBER_RECEIVED_ID, MES.MESSAGE_TITLE, MES.MESSAGE_CONTENT
        FROM TBL_MESSAGE MES
            JOIN TBL_SENT_MESSAGE SM
            ON SM.MESSAGE_ID = MES.ID AND MES.MEMBER_SENT_ID = #{id} AND MES.MEMBER_RECEIVED_ID = #{friendId}
                JOIN TBL_MEMBER MEM
                ON MEM.ID = MES.MEMBER_SENT_ID
        WHERE ROWNUM = 1
        ORDER BY SM.ID DESC
    </select>

    <select id="friendReceivedMessage" resultType="MessageVO">
        SELECT MEMBER_SENT_ID, MEMBER_RECEIVED_ID, MES.MESSAGE_TITLE, MES.MESSAGE_CONTENT
        FROM TBL_MESSAGE MES
            JOIN TBL_RECEIVED_MESSAGE RM
            ON RM.MESSAGE_ID = MES.ID AND MES.MEMBER_RECEIVED_ID = #{id} AND MES.MEMBER_SENT_ID = #{friendId}
                JOIN TBL_MEMBER MEM
                ON MEM.ID = MES.MEMBER_RECEIVED_ID
        WHERE ROWNUM = 1
        ORDER BY RM.ID DESC
    </select>

    <select id="selectFriendPhoto" resultType="FriendDTO">
    SELECT TF.ID,TM.MEMBER_KAKAO_PROFILE_URL,
    (SELECT TM.MEMBER_KAKAO_PROFILE_URL
    FROM TBL_MEMBER F
    WHERE TF.FRIEND_ID = F.ID) AS FRIEND_PHOTO,
    TF.FRIEND_ID, TM.MEMBER_IMG_NAME, TM.MEMBER_IMG_PATH
    FROM TBL_MEMBER TM
    JOIN TBL_FRIEND TF
    ON TM.ID = TF.MEMBER_ID
    WHERE TF.MEMBER_ID = #{id} AND TF.FRIEND_REQUEST_STATUS = 'ACCEPTED';
    </select>

    <select id="selectFriend" resultType="FriendDTO">
        SELECT MEMBER_ID, FRIEND_ID, ID, MEMBER_NICKNAME, MEMBER_KAKAO_PROFILE_URL, MEMBER_IMG_NAME, MEMBER_IMG_PATH
        FROM
            (
            SELECT TF.MEMBER_ID,
                     TF.FRIEND_ID,
                     TF.ID,
                     M.MEMBER_NICKNAME,
                     M.MEMBER_KAKAO_PROFILE_URL,
                     M.MEMBER_IMG_NAME,
                     M.MEMBER_IMG_PATH
              FROM TBL_MEMBER TM
                       JOIN TBL_FRIEND TF
                            ON TM.ID = TF.MEMBER_ID
                       JOIN TBL_MEMBER M
                            ON TF.FRIEND_ID = M.ID
              WHERE TF.MEMBER_ID = #{id}
                AND TF.FRIEND_REQUEST_STATUS = 'ACCEPTED'
              )
            WHERE MEMBER_NICKNAME LIKE '%' || #{keyword} || '%'
    </select>

</mapper>